<StackPanel x:Class="TCG_Creator.CardEdit"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns:local="clr-namespace:TCG_Creator"
            mc:Ignorable="d"
            xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">
    <StackPanel IsEnabled="{Binding CardEditEnable}">
        <Label Style="{StaticResource TitleLabel}" 
                       Content="Region Settings" />
        <GroupBox Style="{StaticResource StdGroupBox}">
                <GroupBox.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Text Options" />
                        <CheckBox Style="{StaticResource SlavedCheckBox}"
                                    IsChecked="{Binding InheritTextProperties}"
                                    ToolTip="Inherit Text Properties" />
                    </StackPanel>
                </GroupBox.Header>
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <ComboBox ItemsSource="{Binding AllFontFamilies}" 
                                    SelectedItem="{Binding SelectedFontFamily}"
                                    IsEnabled="{Binding NotInheritFontFamily}"/>
                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                        <CheckBox Style="{StaticResource IconCheckBox}"
                                    IsChecked="{Binding Bold}"
                                    ToolTip="Bold"/>
                        <CheckBox Style="{StaticResource IconCheckBox}"
                                    IsChecked="{Binding Italic}"
                                    ToolTip="Italic"/>
                        <xctk:DoubleUpDown IsEnabled="{Binding NotInheritFontSize}"
                                        Value="{Binding FontSize}"
                                        Minimum="0.1"/>
                    </StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Label Content="Text Horizontal Alignment" 
                                Grid.Column="0"
                                Grid.Row="0" />
                        <ComboBox ItemsSource="{Binding AllHorizontalAlignments}"
                                    SelectedItem="{Binding TextHorizonalAlignment}" 
                                    Grid.Column="0"
                                    Grid.Row="1"
                                  IsEnabled="{Binding NotInheritTextHorizontalAlignment}"/>
                        <Label Content="Text Vertical Alignment" 
                                Grid.Column="1"
                                Grid.Row="0" />
                    <ComboBox ItemsSource="{Binding AllVerticalAlignments}"
                                SelectedItem="{Binding TextVerticalAlignment}" 
                                Grid.Column="1"
                                Grid.Row="1"
                              IsEnabled="{Binding NotInheritTextVerticalAlignment}"/>
                </Grid>
                </StackPanel>
            </GroupBox>
            <GroupBox Style="{StaticResource StdGroupBox}">
                <GroupBox.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Text Color Options" />
                            <CheckBox Style="{StaticResource SlavedCheckBox}"
                                        IsChecked="{Binding InheritTextBrush}"
                                        ToolTip="Inherit Text Color" />
                        </StackPanel>
                    </GroupBox.Header>
                    <StackPanel>
                    <Label Content="Solid Text Color" />
                    <xctk:ColorPicker Style="{StaticResource StdColorPicker}" 
                                    SelectedColor="{Binding SelectedTextFontBrushColor}" 
                                    IsEnabled="{Binding NotGradientBrushRequested}"/>
                <GroupBox Style="{StaticResource StdGroupBox}">
                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Gradient Options" />
                                <CheckBox IsChecked="{Binding GradientBrushRequested}"
                                            ToolTip="Use Gradient Brush" 
                                            Content="Enable"/>
                            </StackPanel>
                        </GroupBox.Header>
                        <StackPanel>
                            <Label Content="Gradient Angle" />
                            <Slider Style="{StaticResource StdSlider}"
                                    IsEnabled="{Binding GradientBrushRequested}"
                                    Value="{Binding SelectedGradientFontBrushAngle}"
                                    Maximum="360"
                                    Minimum="0"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions >
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Label Content="Gradient Color One" />
                                <xctk:ColorPicker Style="{StaticResource StdColorPicker}"
                                                    SelectedColor="{Binding SelectedGradientFontBrush1}" 
                                                    IsEnabled="{Binding GradientBrushRequested}"
                                                    Grid.Row="1"
                                                    Grid.Column="0"/>
                                <Slider Style="{StaticResource StdSlider}" 
                                        IsEnabled="{Binding GradientBrushRequested}"
                                        Value="{Binding SelectedGradientFontBrushOffset1}"
                                        Maximum="{Binding SelectedGradientFontBrushOffset2}"
                                        Minimum="0" 
                                        Grid.Column="0"
                                        Grid.Row="2"/>
                                <Label Content="Gradient Color Two" 
                                        Grid.Column="1"
                                        Grid.Row="0"/>
                                <xctk:ColorPicker Style="{StaticResource StdColorPicker}"
                                                    SelectedColor="{Binding SelectedGradientFontBrush2}"
                                                    IsEnabled="{Binding GradientBrushRequested}"
                                                    Grid.Column="1"
                                                    Grid.Row="1"/>
                                <Slider Style="{StaticResource StdSlider}" 
                                        IsEnabled="{Binding GradientBrushRequested}"
                                        Value="{Binding SelectedGradientFontBrushOffset2}"
                                        Minimum="{Binding SelectedGradientFontBrushOffset1}"
                                        Maximum="1"
                                        Grid.Column="1"
                                        Grid.Row="2"/>
                            </Grid>
                            
                                
                    </StackPanel>
                </GroupBox>
                </StackPanel>
            </GroupBox>
        <GroupBox Style="{StaticResource StdGroupBox}">
            <GroupBox.Header>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Text Stroke Options" />
                    <CheckBox Style="{StaticResource SlavedCheckBox}"
                                    IsChecked="{Binding InheritStrokeProperties}"
                                    ToolTip="Inherit Stroke Properties" />
                </StackPanel>
            </GroupBox.Header>
            <StackPanel IsEnabled="{Binding NotInheritStrokeProperties}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions >
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Label Content="Stroke Thickness"
                                Grid.Column="0"
                                Grid.Row="0"/>
                    <Slider Style="{StaticResource StdSlider}" 
                                Value="{Binding StrokeThickness}"
                                Minimum="0"
                                Maximum="10"
                                IsEnabled="{Binding StrokeOn}"
                                Grid.Column="0"
                                Grid.Row="1"/>
                    <Label Content="Stroke Color" 
                                Grid.Column="1"
                                Grid.Row="0"/>
                    <xctk:ColorPicker Style="{StaticResource StdColorPicker}"
                                            SelectedColor="{Binding TextStrokeColor}"
                                            IsEnabled="{Binding GradientBrushRequested}"
                                            Grid.Column="1"
                                            Grid.Row="1"/>
                </Grid>

            </StackPanel>
        </GroupBox>
        <GroupBox Style="{StaticResource StdGroupBox}">
            <GroupBox.Header>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Background Image" />
                    <CheckBox Style="{StaticResource SlavedCheckBox}"
                                      IsChecked="{Binding InheritBackground}"
                                      ToolTip="Inherit Background" />
                </StackPanel>
            </GroupBox.Header>
            <StackPanel>
                <StackPanel Orientation="Horizontal">
                    <ComboBox ItemsSource="{Binding AllBackgroundImageFillType}" 
                              SelectedItem="{Binding BackgroundImageFillType}"
                              IsEnabled="{Binding NotInheritBackground}"/>
                </StackPanel>
                <Label Content="Background Image Location" />
                <TextBox Text="{Binding BackgroundImageLocation}" />
            </StackPanel>
        </GroupBox>
    </StackPanel>
    <GroupBox Style="{StaticResource StdGroupBox}"
              Header="Region Menu">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="8*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <ScrollViewer VerticalScrollBarVisibility="Auto"
                          Grid.Row="0">
                <ListBox Grid.Row="0"
                         ItemsSource="{Binding CurrentlySelectedCardRegions}"
                         SelectedItem="{Binding CurrentlySelectedRegion}">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <EventSetter Event="MouseEnter" Handler="RegionListMouseEnter" />
                            <EventSetter Event="MouseLeave" Handler="RegionListMouseLeave" />
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type local:Card_Region}">
                            <TextBlock Text="{Binding Path=DisplayName}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </ScrollViewer>
            <UniformGrid Grid.Row="1"
                         Columns="5" >
                <local:PathCheckBox Style="{StaticResource PathCheckBox}"
                                    Data="{Binding Source={StaticResource Unlock_Icon}, Path=Data}"
                                    CheckedData="{Binding Source={StaticResource Lock_Icon}, Path=Data}"
                                    IsChecked="{Binding CurrentlySelectedRegionIsLocked}"
                                    IsEnabled="{Binding IsValidToLockRegion}"
                                    ToolTip="Lock Region"/>
                <local:PathButton Style="{StaticResource RegionButton}" 
                                  Data="{Binding Source={StaticResource New_Region_Icon}, Path=Data}" 
                                  Command="{Binding Path=AddNewRegionCommand}"
                                  IsEnabled="{Binding IsValidToAddRegion}"
                                  ToolTip="New Region"/>
                <local:PathButton Style="{StaticResource RegionButton}" 
                                  Data="{Binding Source={StaticResource Move_Region_Icon}, Path=Data}" 
                                  Command="{Binding Path=MoveSelectedRegionCommand}"
                                  IsEnabled="{Binding IsValidToMoveRegion}"
                                  ToolTip="Move Region"/>
                <local:PathButton Style="{StaticResource RegionButton}" 
                                  Data="{Binding Source={StaticResource Delete_Region_Icon}, Path=Data}" 
                                  Command="{Binding Path=DeleteSelectedRegionCommand}"
                                  IsEnabled="{Binding IsValidToDeleteRegion}"
                                  ToolTip="Delete Region"/>
            </UniformGrid>
        </Grid>
    </GroupBox>
</StackPanel>
